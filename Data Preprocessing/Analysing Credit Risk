{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analyzing borrowersâ€™ risk of defaulting"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The purpose of this of this project is do help determine a customers credit score for the bank's loan division. This report will assess if a customer's martial status and number of children has an impact on whether they will default on a loan. The data provided has some information about 21525 customers, particularly their maritual status, education, number of children and whether they have defaulted on a loan or not.\n",
    "\n",
    "The steps taken to build this report is firstly looking at the general information of the dataset like the datatypes and to assess any intial discrepancies such as missing values. Then I will start the data preprocessing process of filling in missing values, data type replacement, processing duplicates and sorting out any unusual values. I will categorise the data by number of children, maritual status and loan purpose for easier analysis. Finally I will analyse the dataset to determine whether a customers maritual status and number of children will impact on whether they will default on a loan."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 1. Open the data file and have a look at the general information."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Information about the dataset:\n",
      "\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21525 entries, 0 to 21524\n",
      "Data columns (total 12 columns):\n",
      "children            21525 non-null int64\n",
      "days_employed       19351 non-null float64\n",
      "dob_years           21525 non-null int64\n",
      "education           21525 non-null object\n",
      "education_id        21525 non-null int64\n",
      "family_status       21525 non-null object\n",
      "family_status_id    21525 non-null int64\n",
      "gender              21525 non-null object\n",
      "income_type         21525 non-null object\n",
      "debt                21525 non-null int64\n",
      "total_income        19351 non-null float64\n",
      "purpose             21525 non-null object\n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 2.0+ MB\n",
      "\n",
      "Description of the dataset:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>21525.000000</td>\n",
       "      <td>19351.000000</td>\n",
       "      <td>21525.000000</td>\n",
       "      <td>21525.000000</td>\n",
       "      <td>21525.000000</td>\n",
       "      <td>21525.000000</td>\n",
       "      <td>19351.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>0.538908</td>\n",
       "      <td>63046.497661</td>\n",
       "      <td>43.293380</td>\n",
       "      <td>0.817236</td>\n",
       "      <td>0.972544</td>\n",
       "      <td>0.080883</td>\n",
       "      <td>26787.568355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>1.381587</td>\n",
       "      <td>140827.311974</td>\n",
       "      <td>12.574584</td>\n",
       "      <td>0.548138</td>\n",
       "      <td>1.420324</td>\n",
       "      <td>0.272661</td>\n",
       "      <td>16475.450632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-18388.949901</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3306.762000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-2747.423625</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>16488.504500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1203.369529</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>23202.870000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-291.095954</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>32549.611000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>401755.400475</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>362496.645000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           children  days_employed     dob_years  education_id  \\\n",
       "count  21525.000000   19351.000000  21525.000000  21525.000000   \n",
       "mean       0.538908   63046.497661     43.293380      0.817236   \n",
       "std        1.381587  140827.311974     12.574584      0.548138   \n",
       "min       -1.000000  -18388.949901      0.000000      0.000000   \n",
       "25%        0.000000   -2747.423625     33.000000      1.000000   \n",
       "50%        0.000000   -1203.369529     42.000000      1.000000   \n",
       "75%        1.000000    -291.095954     53.000000      1.000000   \n",
       "max       20.000000  401755.400475     75.000000      4.000000   \n",
       "\n",
       "       family_status_id          debt   total_income  \n",
       "count      21525.000000  21525.000000   19351.000000  \n",
       "mean           0.972544      0.080883   26787.568355  \n",
       "std            1.420324      0.272661   16475.450632  \n",
       "min            0.000000      0.000000    3306.762000  \n",
       "25%            0.000000      0.000000   16488.504500  \n",
       "50%            0.000000      0.000000   23202.870000  \n",
       "75%            1.000000      0.000000   32549.611000  \n",
       "max            4.000000      1.000000  362496.645000  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Rows that have duplicates:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2849</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>41</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>purchase of the house for my family</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4182</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>34</td>\n",
       "      <td>BACHELOR'S DEGREE</td>\n",
       "      <td>0</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wedding ceremony</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4851</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>60</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wedding ceremony</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5557</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to have a wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7808</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>57</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>having a wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8583</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>unmarried</td>\n",
       "      <td>4</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>supplementary education</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9238</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>34</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>buying property for renting out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9528</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>66</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>widow / widower</td>\n",
       "      <td>2</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>transactions with my real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9627</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>56</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>transactions with my real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10462</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>62</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>buy commercial real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10697</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>40</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>business</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to have a wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10864</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>62</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>housing renovation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10994</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>62</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>housing renovation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11791</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>building a property</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12373</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>buy real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12375</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>buy real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12736</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to become educated</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13025</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>44</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>second-hand car purchase</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13639</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13773</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>35</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to have a wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13878</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>business</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>purchase of the house</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13942</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>44</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>car purchase</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14432</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>civil servant</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>getting an education</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14832</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>50</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>unmarried</td>\n",
       "      <td>4</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>property</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15091</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>having a wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15188</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>60</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>buy real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15273</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>57</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wedding ceremony</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16176</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>housing renovation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16378</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>46</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>university education</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16902</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to have a wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16904</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>32</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>buying a second-hand car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17379</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>business</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>transactions with commercial real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17755</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>43</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to become educated</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17774</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>40</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>business</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>building a real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18328</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>29</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>buy residential real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18349</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>civil servant</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>purchase of the house for my family</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18428</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>housing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18521</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>56</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to have a wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18563</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>transactions with my real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18755</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to become educated</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19041</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>56</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>having a wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19184</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>46</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to own a car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19321</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>unmarried</td>\n",
       "      <td>4</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>second-hand car purchase</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19387</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>38</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>business</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>having a wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19688</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>61</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>real estate transactions</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19832</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>48</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>housing renovation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19946</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>57</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>second-hand car purchase</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20116</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>57</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wedding ceremony</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20165</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>42</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>purchase of the house for my family</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20702</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>supplementary education</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21032</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>60</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to become educated</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21132</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>housing renovation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21281</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>buy commercial real estate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21415</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>housing transactions</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       children  days_employed  dob_years            education  education_id  \\\n",
       "2849          0            NaN         41  secondary education             1   \n",
       "4182          1            NaN         34    BACHELOR'S DEGREE             0   \n",
       "4851          0            NaN         60  secondary education             1   \n",
       "5557          0            NaN         58  secondary education             1   \n",
       "7808          0            NaN         57  secondary education             1   \n",
       "8583          0            NaN         58    bachelor's degree             0   \n",
       "9238          2            NaN         34  secondary education             1   \n",
       "9528          0            NaN         66  secondary education             1   \n",
       "9627          0            NaN         56  secondary education             1   \n",
       "10462         0            NaN         62  secondary education             1   \n",
       "10697         0            NaN         40  secondary education             1   \n",
       "10864         0            NaN         62  secondary education             1   \n",
       "10994         0            NaN         62  secondary education             1   \n",
       "11791         0            NaN         47  secondary education             1   \n",
       "12373         0            NaN         58  secondary education             1   \n",
       "12375         1            NaN         37  secondary education             1   \n",
       "12736         0            NaN         59  secondary education             1   \n",
       "13025         1            NaN         44  secondary education             1   \n",
       "13639         0            NaN         64  secondary education             1   \n",
       "13773         0            NaN         35  secondary education             1   \n",
       "13878         1            NaN         31  secondary education             1   \n",
       "13942         0            NaN         44  secondary education             1   \n",
       "14432         2            NaN         36    bachelor's degree             0   \n",
       "14832         0            NaN         50  secondary education             1   \n",
       "15091         0            NaN         58  secondary education             1   \n",
       "15188         0            NaN         60  secondary education             1   \n",
       "15273         0            NaN         57  secondary education             1   \n",
       "16176         0            NaN         47  secondary education             1   \n",
       "16378         0            NaN         46  secondary education             1   \n",
       "16902         2            NaN         39  secondary education             1   \n",
       "16904         1            NaN         32    bachelor's degree             0   \n",
       "17379         0            NaN         54    bachelor's degree             0   \n",
       "17755         1            NaN         43  secondary education             1   \n",
       "17774         1            NaN         40  secondary education             1   \n",
       "18328         0            NaN         29    bachelor's degree             0   \n",
       "18349         1            NaN         30    bachelor's degree             0   \n",
       "18428         0            NaN         64  secondary education             1   \n",
       "18521         0            NaN         56  secondary education             1   \n",
       "18563         0            NaN         54  secondary education             1   \n",
       "18755         0            NaN         58  secondary education             1   \n",
       "19041         0            NaN         56  secondary education             1   \n",
       "19184         0            NaN         46  secondary education             1   \n",
       "19321         0            NaN         23  secondary education             1   \n",
       "19387         0            NaN         38    bachelor's degree             0   \n",
       "19688         0            NaN         61  secondary education             1   \n",
       "19832         0            NaN         48  secondary education             1   \n",
       "19946         0            NaN         57  secondary education             1   \n",
       "20116         0            NaN         57  secondary education             1   \n",
       "20165         0            NaN         42  secondary education             1   \n",
       "20702         0            NaN         64  secondary education             1   \n",
       "21032         0            NaN         60  secondary education             1   \n",
       "21132         0            NaN         47  secondary education             1   \n",
       "21281         1            NaN         30    bachelor's degree             0   \n",
       "21415         0            NaN         54  secondary education             1   \n",
       "\n",
       "           family_status  family_status_id gender    income_type  debt  \\\n",
       "2849             married                 0      F       employee     0   \n",
       "4182   civil partnership                 1      F       employee     0   \n",
       "4851   civil partnership                 1      F        retiree     0   \n",
       "5557   civil partnership                 1      F        retiree     0   \n",
       "7808   civil partnership                 1      F        retiree     0   \n",
       "8583           unmarried                 4      F        retiree     0   \n",
       "9238             married                 0      F       employee     0   \n",
       "9528     widow / widower                 2      F        retiree     0   \n",
       "9627             married                 0      F        retiree     0   \n",
       "10462            married                 0      F        retiree     0   \n",
       "10697  civil partnership                 1      F       business     0   \n",
       "10864            married                 0      F        retiree     0   \n",
       "10994            married                 0      F        retiree     0   \n",
       "11791            married                 0      F       employee     0   \n",
       "12373            married                 0      M       employee     0   \n",
       "12375            married                 0      F       employee     0   \n",
       "12736            married                 0      F        retiree     0   \n",
       "13025            married                 0      F       employee     0   \n",
       "13639            married                 0      F        retiree     0   \n",
       "13773  civil partnership                 1      F       employee     0   \n",
       "13878            married                 0      F       business     0   \n",
       "13942            married                 0      F       employee     0   \n",
       "14432            married                 0      F  civil servant     0   \n",
       "14832          unmarried                 4      F       employee     0   \n",
       "15091  civil partnership                 1      M       employee     0   \n",
       "15188            married                 0      M       employee     0   \n",
       "15273  civil partnership                 1      F        retiree     0   \n",
       "16176            married                 0      F       employee     0   \n",
       "16378            married                 0      F       employee     0   \n",
       "16902  civil partnership                 1      F       employee     0   \n",
       "16904            married                 0      F       employee     0   \n",
       "17379            married                 0      M       business     0   \n",
       "17755            married                 0      M       employee     0   \n",
       "17774  civil partnership                 1      F       business     0   \n",
       "18328            married                 0      M       employee     0   \n",
       "18349            married                 0      F  civil servant     0   \n",
       "18428            married                 0      F        retiree     0   \n",
       "18521  civil partnership                 1      F       employee     0   \n",
       "18563            married                 0      F       employee     0   \n",
       "18755            married                 0      F        retiree     0   \n",
       "19041  civil partnership                 1      F       employee     0   \n",
       "19184            married                 0      F       employee     0   \n",
       "19321          unmarried                 4      F       employee     0   \n",
       "19387  civil partnership                 1      F       business     0   \n",
       "19688            married                 0      F        retiree     0   \n",
       "19832            married                 0      F       employee     0   \n",
       "19946            married                 0      F       employee     0   \n",
       "20116  civil partnership                 1      M        retiree     0   \n",
       "20165            married                 0      F       employee     0   \n",
       "20702            married                 0      F        retiree     0   \n",
       "21032            married                 0      F        retiree     0   \n",
       "21132            married                 0      F       employee     0   \n",
       "21281            married                 0      F       employee     0   \n",
       "21415            married                 0      F        retiree     0   \n",
       "\n",
       "       total_income                                   purpose  \n",
       "2849            NaN       purchase of the house for my family  \n",
       "4182            NaN                          wedding ceremony  \n",
       "4851            NaN                          wedding ceremony  \n",
       "5557            NaN                         to have a wedding  \n",
       "7808            NaN                          having a wedding  \n",
       "8583            NaN                   supplementary education  \n",
       "9238            NaN           buying property for renting out  \n",
       "9528            NaN          transactions with my real estate  \n",
       "9627            NaN          transactions with my real estate  \n",
       "10462           NaN                buy commercial real estate  \n",
       "10697           NaN                         to have a wedding  \n",
       "10864           NaN                        housing renovation  \n",
       "10994           NaN                        housing renovation  \n",
       "11791           NaN                       building a property  \n",
       "12373           NaN                           buy real estate  \n",
       "12375           NaN                           buy real estate  \n",
       "12736           NaN                        to become educated  \n",
       "13025           NaN                  second-hand car purchase  \n",
       "13639           NaN                                       car  \n",
       "13773           NaN                         to have a wedding  \n",
       "13878           NaN                     purchase of the house  \n",
       "13942           NaN                              car purchase  \n",
       "14432           NaN                      getting an education  \n",
       "14832           NaN                                  property  \n",
       "15091           NaN                          having a wedding  \n",
       "15188           NaN                           buy real estate  \n",
       "15273           NaN                          wedding ceremony  \n",
       "16176           NaN                        housing renovation  \n",
       "16378           NaN                      university education  \n",
       "16902           NaN                         to have a wedding  \n",
       "16904           NaN                  buying a second-hand car  \n",
       "17379           NaN  transactions with commercial real estate  \n",
       "17755           NaN                        to become educated  \n",
       "17774           NaN                    building a real estate  \n",
       "18328           NaN               buy residential real estate  \n",
       "18349           NaN       purchase of the house for my family  \n",
       "18428           NaN                                   housing  \n",
       "18521           NaN                         to have a wedding  \n",
       "18563           NaN          transactions with my real estate  \n",
       "18755           NaN                        to become educated  \n",
       "19041           NaN                          having a wedding  \n",
       "19184           NaN                              to own a car  \n",
       "19321           NaN                  second-hand car purchase  \n",
       "19387           NaN                          having a wedding  \n",
       "19688           NaN                  real estate transactions  \n",
       "19832           NaN                        housing renovation  \n",
       "19946           NaN                  second-hand car purchase  \n",
       "20116           NaN                          wedding ceremony  \n",
       "20165           NaN       purchase of the house for my family  \n",
       "20702           NaN                   supplementary education  \n",
       "21032           NaN                        to become educated  \n",
       "21132           NaN                        housing renovation  \n",
       "21281           NaN                buy commercial real estate  \n",
       "21415           NaN                      housing transactions  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Information about dataset after removal of duplicates:\n",
      "\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 21419 entries, 0 to 21524\n",
      "Data columns (total 12 columns):\n",
      "children            21419 non-null int64\n",
      "days_employed       19351 non-null float64\n",
      "dob_years           21419 non-null int64\n",
      "education           21419 non-null object\n",
      "education_id        21419 non-null int64\n",
      "family_status       21419 non-null object\n",
      "family_status_id    21419 non-null int64\n",
      "gender              21419 non-null object\n",
      "income_type         21419 non-null object\n",
      "debt                21419 non-null int64\n",
      "total_income        19351 non-null float64\n",
      "purpose             21419 non-null object\n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 2.1+ MB\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from nltk.stem import SnowballStemmer \n",
    "english_stemmer = SnowballStemmer('english') \n",
    "try:\n",
    "    credit_score = pd.read_csv('C:/Users/Slurp God/Downloads/credit_scoring_eng.csv')\n",
    "except:\n",
    "    credit_score = pd.read_csv('/datasets/credit_scoring_eng.csv')\n",
    "    \n",
    "print('Information about the dataset:\\n')\n",
    "credit_score.info()\n",
    "\n",
    "print('\\nDescription of the dataset:')\n",
    "display(credit_score.describe())\n",
    "\n",
    "dupli = credit_score[credit_score.duplicated()]\n",
    "print('\\nRows that have duplicates:')\n",
    "display(dupli)\n",
    "\n",
    "credit_score = credit_score.drop_duplicates(keep=False)\n",
    "print('\\nInformation about dataset after removal of duplicates:\\n')\n",
    "\n",
    "credit_score.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "Used pandas to read the csv and saved it into variable credit_score, an useful description of the dataset. Imported the NLP, nltk as this will be used in step 2 for processing duplicates. Used the info method to look at the general information of the dataset. Assessing the datatypes, the missing values and the column names.\n",
    "\n",
    "Found that days_employed is a float object when it makes better sense to be a interger as measure days in full intergers. I will address this in step 2 data type replacement.Total_income is a float as well, but that is as expected. Also total_income and days_employed have missing values. While using the duplicated() method, we find that there are some rows that have duplicated. \n",
    "\n",
    "Additonally from looking at the description of the dataset, on the days_employed column there are negative days. On the children column there are some rows that contain 20 children. This is out of the range of children (1-5).\n",
    "\n",
    "These issues will need to be addressed in the data preprocessing process.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 2. Data preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Processing missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Missing values in interger columns: \n",
      " children               0\n",
      "days_employed       2068\n",
      "dob_years              0\n",
      "education_id           0\n",
      "family_status_id       0\n",
      "debt                   0\n",
      "total_income        2068\n",
      "dtype: int64\n",
      "Missing values in object columns: \n",
      " education        0\n",
      "family_status    0\n",
      "gender           0\n",
      "income_type      0\n",
      "purpose          0\n",
      "dtype: int64\n",
      "Final count of missing values in days_employed  0\n",
      "Final count of missing values in total_income  0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>8437.673028</td>\n",
       "      <td>42</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>40620.102</td>\n",
       "      <td>purchase of the house</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4024.803754</td>\n",
       "      <td>36</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>17932.802</td>\n",
       "      <td>car purchase</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>5623.422610</td>\n",
       "      <td>33</td>\n",
       "      <td>Secondary Education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>23341.752</td>\n",
       "      <td>purchase of the house</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4124.747207</td>\n",
       "      <td>32</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>42820.568</td>\n",
       "      <td>supplementary education</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>340266.072047</td>\n",
       "      <td>53</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>25378.572</td>\n",
       "      <td>to have a wedding</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years            education  education_id  \\\n",
       "0         1    8437.673028         42    bachelor's degree             0   \n",
       "1         1    4024.803754         36  secondary education             1   \n",
       "2         0    5623.422610         33  Secondary Education             1   \n",
       "3         3    4124.747207         32  secondary education             1   \n",
       "4         0  340266.072047         53  secondary education             1   \n",
       "\n",
       "       family_status  family_status_id gender income_type  debt  total_income  \\\n",
       "0            married                 0      F    employee     0     40620.102   \n",
       "1            married                 0      F    employee     0     17932.802   \n",
       "2            married                 0      M    employee     0     23341.752   \n",
       "3            married                 0      M    employee     0     42820.568   \n",
       "4  civil partnership                 1      F     retiree     0     25378.572   \n",
       "\n",
       "                   purpose  \n",
       "0    purchase of the house  \n",
       "1             car purchase  \n",
       "2    purchase of the house  \n",
       "3  supplementary education  \n",
       "4        to have a wedding  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_var = credit_score.columns[credit_score.dtypes != 'object']\n",
    "cat_var = credit_score.columns[credit_score.dtypes == 'object']\n",
    "\n",
    "print('Missing values in interger columns: \\n',credit_score[num_var].isnull().sum())\n",
    "\n",
    "print('Missing values in object columns: \\n',credit_score[cat_var].isnull().sum())\n",
    "\n",
    "credit_score['total_income'] = credit_score['total_income'].fillna(credit_score.groupby(['education','income_type'])['total_income'].transform('median'))\n",
    "\n",
    "pos_days = abs(credit_score['days_employed'])\n",
    "credit_score.loc[(credit_score['days_employed'] < 0), 'days_employed'] = pos_days\n",
    "\n",
    "days_med = credit_score['days_employed'].median()\n",
    "days_mean = credit_score['days_employed'].mean()\n",
    "credit_score['days_employed'] = credit_score['days_employed'].fillna(credit_score.groupby(['education','income_type'])['days_employed'].transform('median'))\n",
    "\n",
    "print('Final count of missing values in days_employed ', credit_score['days_employed'].isnull().sum())\n",
    "print('Final count of missing values in total_income ',credit_score['total_income'].isnull().sum())\n",
    "\n",
    "credit_score.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "Seperated the interger columns from the object columns because different ways to approach each type of column. Collating like data types together makes it easier to assess what to do if there are missing values.\n",
    "\n",
    "Used the boolean method isnull() to find the missing values and used sum() to add them together. Find out there are 2174 missing values in days_employed and total_income as stated in the general info. The missing data could be due to human error or lack of information given by customers, especially with days_employed.\n",
    "\n",
    "There are no missing values in the columns as objects, but I checked just in case I missed it when looking at the info. Then I used groupby to get an more accurate income by getting median values of gathering values for like education and income types. Using then the fillna method to input the median values into the missing values.\n",
    "\n",
    "I decided to calculate using the median as income is subject to outliers that can skew result. Median values are more robust.\n",
    "I realised the some values in days_employed were negative, I used abs() to change the negative values to positive, now i can take the median value.\n",
    "\n",
    "Finally, I checked the general information of the dataset to see if I have filled all the missing values as well as calling the Dataframe to check the progress of the data preprocessing on the dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data type replacement"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 21419 entries, 0 to 21524\n",
      "Data columns (total 12 columns):\n",
      "children            21419 non-null int64\n",
      "days_employed       21419 non-null int64\n",
      "dob_years           21419 non-null int64\n",
      "education           21419 non-null object\n",
      "education_id        21419 non-null int64\n",
      "family_status       21419 non-null object\n",
      "family_status_id    21419 non-null int64\n",
      "gender              21419 non-null object\n",
      "income_type         21419 non-null object\n",
      "debt                21419 non-null int64\n",
      "total_income        21419 non-null float64\n",
      "purpose             21419 non-null object\n",
      "dtypes: float64(1), int64(6), object(5)\n",
      "memory usage: 2.7+ MB\n"
     ]
    }
   ],
   "source": [
    "try:\n",
    "    credit_score['days_employed']=round(credit_score['days_employed']).astype(int)\n",
    "\n",
    "except:\n",
    "    print('Please check the data')\n",
    "\n",
    "credit_score.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "Changing the data type of days_employed as we measure days in terms of full intergers rather than floats. \n",
    "Then I used try and except method incase it doesnt work and need to check data.\n",
    "If it did work I used the round() method so it rounds to the nearest interger.\n",
    "\n",
    "Replaced the datatype using the method astype because days_employed was already an interger.\n",
    "\n",
    "Checking that it has been implented by calling info(), to check the data type"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Processing duplicates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Education duplicates:\n",
      " education\n",
      "BACHELOR'S DEGREE        272\n",
      "Bachelor's Degree        268\n",
      "GRADUATE DEGREE            1\n",
      "Graduate Degree            1\n",
      "PRIMARY EDUCATION         17\n",
      "Primary Education         15\n",
      "SECONDARY EDUCATION      772\n",
      "SOME COLLEGE              29\n",
      "Secondary Education      711\n",
      "Some College              47\n",
      "bachelor's degree       4702\n",
      "graduate degree            4\n",
      "primary education        250\n",
      "secondary education    13662\n",
      "some college             668\n",
      "dtype: int64\n",
      "\n",
      "Intial values in children:\n",
      " children\n",
      "-1        47\n",
      " 0     14067\n",
      " 1      4800\n",
      " 2      2049\n",
      " 3       330\n",
      " 4        41\n",
      " 5         9\n",
      " 20       76\n",
      "dtype: int64\n",
      "\n",
      "Purpose column duplicates:\n",
      " purpose\n",
      "building a property                         618\n",
      "building a real estate                      624\n",
      "buy commercial real estate                  660\n",
      "buy real estate                             618\n",
      "buy residential real estate                 605\n",
      "buying a second-hand car                    477\n",
      "buying my own car                           505\n",
      "buying property for renting out             651\n",
      "car                                         493\n",
      "car purchase                                460\n",
      "cars                                        478\n",
      "construction of own property                635\n",
      "education                                   447\n",
      "getting an education                        441\n",
      "getting higher education                    426\n",
      "going to university                         496\n",
      "having a wedding                            769\n",
      "housing                                     645\n",
      "housing renovation                          604\n",
      "housing transactions                        651\n",
      "profile education                           436\n",
      "property                                    632\n",
      "purchase of a car                           455\n",
      "purchase of my own house                    620\n",
      "purchase of the house                       645\n",
      "purchase of the house for my family         635\n",
      "real estate transactions                    674\n",
      "second-hand car purchase                    483\n",
      "supplementary education                     458\n",
      "to become educated                          404\n",
      "to buy a car                                472\n",
      "to get a supplementary education            447\n",
      "to have a wedding                           764\n",
      "to own a car                                478\n",
      "transactions with commercial real estate    649\n",
      "transactions with my real estate            624\n",
      "university education                        451\n",
      "wedding ceremony                            789\n",
      "dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>8438</td>\n",
       "      <td>42</td>\n",
       "      <td>bachelor's degree</td>\n",
       "      <td>0</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>40620.102</td>\n",
       "      <td>Housing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4025</td>\n",
       "      <td>36</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>17932.802</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>5623</td>\n",
       "      <td>33</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>23341.752</td>\n",
       "      <td>Housing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4125</td>\n",
       "      <td>32</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>42820.568</td>\n",
       "      <td>Education</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>340266</td>\n",
       "      <td>53</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>25378.572</td>\n",
       "      <td>Wedding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21520</td>\n",
       "      <td>1</td>\n",
       "      <td>4529</td>\n",
       "      <td>43</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>business</td>\n",
       "      <td>0</td>\n",
       "      <td>35966.698</td>\n",
       "      <td>Housing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21521</td>\n",
       "      <td>0</td>\n",
       "      <td>343937</td>\n",
       "      <td>67</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>retiree</td>\n",
       "      <td>0</td>\n",
       "      <td>24959.969</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21522</td>\n",
       "      <td>1</td>\n",
       "      <td>2113</td>\n",
       "      <td>38</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>civil partnership</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>1</td>\n",
       "      <td>14347.610</td>\n",
       "      <td>Housing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21523</td>\n",
       "      <td>3</td>\n",
       "      <td>3112</td>\n",
       "      <td>38</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>employee</td>\n",
       "      <td>1</td>\n",
       "      <td>39054.888</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21524</td>\n",
       "      <td>2</td>\n",
       "      <td>1985</td>\n",
       "      <td>40</td>\n",
       "      <td>secondary education</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>employee</td>\n",
       "      <td>0</td>\n",
       "      <td>13127.587</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>21419 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       children  days_employed  dob_years            education  education_id  \\\n",
       "0             1           8438         42    bachelor's degree             0   \n",
       "1             1           4025         36  secondary education             1   \n",
       "2             0           5623         33  secondary education             1   \n",
       "3             3           4125         32  secondary education             1   \n",
       "4             0         340266         53  secondary education             1   \n",
       "...         ...            ...        ...                  ...           ...   \n",
       "21520         1           4529         43  secondary education             1   \n",
       "21521         0         343937         67  secondary education             1   \n",
       "21522         1           2113         38  secondary education             1   \n",
       "21523         3           3112         38  secondary education             1   \n",
       "21524         2           1985         40  secondary education             1   \n",
       "\n",
       "           family_status  family_status_id gender income_type  debt  \\\n",
       "0                married                 0      F    employee     0   \n",
       "1                married                 0      F    employee     0   \n",
       "2                married                 0      M    employee     0   \n",
       "3                married                 0      M    employee     0   \n",
       "4      civil partnership                 1      F     retiree     0   \n",
       "...                  ...               ...    ...         ...   ...   \n",
       "21520  civil partnership                 1      F    business     0   \n",
       "21521            married                 0      F     retiree     0   \n",
       "21522  civil partnership                 1      M    employee     1   \n",
       "21523            married                 0      M    employee     1   \n",
       "21524            married                 0      F    employee     0   \n",
       "\n",
       "       total_income    purpose  \n",
       "0         40620.102    Housing  \n",
       "1         17932.802        Car  \n",
       "2         23341.752    Housing  \n",
       "3         42820.568  Education  \n",
       "4         25378.572    Wedding  \n",
       "...             ...        ...  \n",
       "21520     35966.698    Housing  \n",
       "21521     24959.969        Car  \n",
       "21522     14347.610    Housing  \n",
       "21523     39054.888        Car  \n",
       "21524     13127.587        Car  \n",
       "\n",
       "[21419 rows x 12 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('\\nEducation duplicates:\\n',credit_score.pivot_table(index=['education'],aggfunc='size')),\n",
    "\n",
    "credit_score['education']= credit_score['education'].str.lower()\n",
    "\n",
    "print('\\nIntial values in children:\\n',credit_score.pivot_table(index=['children'],aggfunc='size'))\n",
    "\n",
    "credit_score['children'] = credit_score['children'].replace(20,2)\n",
    "\n",
    "credit_score['children'] = abs(credit_score['children'])\n",
    "\n",
    "print('\\nPurpose column duplicates:\\n',credit_score.pivot_table(index=['purpose'],aggfunc='size' ))\n",
    "\n",
    "english_stemmer = SnowballStemmer('english') \n",
    "\n",
    "token = credit_score['purpose'].apply(english_stemmer.stem)\n",
    "\n",
    "def purpose_cat(purpose):\n",
    "        if'car' in purpose:\n",
    "            found = 'Car'\n",
    "        elif 'hous' in purpose or 'est' in purpose or'properti' in purpose:\n",
    "            found = 'Housing'\n",
    "        elif 'educ' in purpose or 'uni' in purpose:\n",
    "            found = 'Education'\n",
    "        else:\n",
    "            found = 'Wedding'\n",
    "        return found\n",
    "\n",
    "\n",
    "token_cat=token.apply(purpose_cat)\n",
    "credit_score['purpose'] = token_cat\n",
    "display(credit_score)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "I used a pivot table using column 'education' as the index to calculate the count of different types of education used. Found that there was duplicates but formatted differently. So I used str.lower() to turn them into the same format rather than deleting them. I did this because the count of each type of education varied alot. For example even after the change in format the count for 'graduate' value is only 6 and would fall if I was to delete it. This could negatively impact the variation of the dataset.\n",
    "\n",
    "\n",
    "I also changed the value of children column '20' to '2'.Changed it because value of 20 is inconsistent with the range of data for children and could be a result of human error typing 20 rather than 2.\n",
    "\n",
    "Finally, realising the duplicate values in the 'purpose' column I used a stemmer to create partial strings for each purpose. This was so when I created the function purpose_cat , if the partial string was equal to the appropriate if statement it then can be replaced with one of the general values ( housing , car , education , wedding). This would make it easier for me to further categorise the data.\n",
    "\n",
    "I called the Dataframe credit_score['children'].value_counts() , credit_score['education'].value_counts()\n",
    "to check all my changes had been implemented and then credit_score.head() to check the main Dataframe."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Categorizing Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>debt_ratio</th>\n",
       "      <th>total_income</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0.079663</td>\n",
       "      <td>25820.667993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1-2</td>\n",
       "      <td>0.092621</td>\n",
       "      <td>26730.461481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3+</td>\n",
       "      <td>0.097574</td>\n",
       "      <td>29654.125562</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          debt_ratio  total_income\n",
       "children                          \n",
       "0           0.079663  25820.667993\n",
       "1-2         0.092621  26730.461481\n",
       "3+          0.097574  29654.125562"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>debt_ratio</th>\n",
       "      <th>total_income</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>family_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Alone</td>\n",
       "      <td>0.133114</td>\n",
       "      <td>25138.330908</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.084894</td>\n",
       "      <td>27429.595297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.054812</td>\n",
       "      <td>29261.012610</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               debt_ratio  total_income\n",
       "family_status                          \n",
       "Alone            0.133114  25138.330908\n",
       "Together         0.084894  27429.595297\n",
       "Was together     0.054812  29261.012610"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>debt_ratio</th>\n",
       "      <th>total_income</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>purpose</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Car</td>\n",
       "      <td>0.080644</td>\n",
       "      <td>27420.531644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Education</td>\n",
       "      <td>0.066731</td>\n",
       "      <td>25086.458501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Housing</td>\n",
       "      <td>0.142866</td>\n",
       "      <td>25861.258157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Wedding</td>\n",
       "      <td>0.066070</td>\n",
       "      <td>31436.837518</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           debt_ratio  total_income\n",
       "purpose                            \n",
       "Car          0.080644  27420.531644\n",
       "Education    0.066731  25086.458501\n",
       "Housing      0.142866  25861.258157\n",
       "Wedding      0.066070  31436.837518"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>debt_ratio</th>\n",
       "      <th>total_income</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>purpose</th>\n",
       "      <th>children</th>\n",
       "      <th>family_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td rowspan=\"9\" valign=\"top\">Car</td>\n",
       "      <td rowspan=\"3\" valign=\"top\">0</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.123791</td>\n",
       "      <td>26481.929710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.076205</td>\n",
       "      <td>25989.772921</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.080808</td>\n",
       "      <td>24233.223378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"3\" valign=\"top\">1-2</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.156522</td>\n",
       "      <td>27471.051578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.108454</td>\n",
       "      <td>27816.610535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.089109</td>\n",
       "      <td>25507.851728</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"3\" valign=\"top\">3+</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>24883.941750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.090909</td>\n",
       "      <td>29171.334697</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>35229.068500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"9\" valign=\"top\">Education</td>\n",
       "      <td rowspan=\"3\" valign=\"top\">0</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.111842</td>\n",
       "      <td>26702.273725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.082837</td>\n",
       "      <td>26210.188046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.074850</td>\n",
       "      <td>23515.225153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"3\" valign=\"top\">1-2</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.094017</td>\n",
       "      <td>23940.697158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.110698</td>\n",
       "      <td>26384.310761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.070000</td>\n",
       "      <td>25068.159245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"3\" valign=\"top\">3+</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>18033.161667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.056338</td>\n",
       "      <td>29494.768092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>26429.342667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"9\" valign=\"top\">Housing</td>\n",
       "      <td rowspan=\"3\" valign=\"top\">0</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.073770</td>\n",
       "      <td>26947.833857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.067001</td>\n",
       "      <td>26541.906401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.056671</td>\n",
       "      <td>24973.837045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"3\" valign=\"top\">1-2</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.111888</td>\n",
       "      <td>27275.892500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.078697</td>\n",
       "      <td>27320.918656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.075862</td>\n",
       "      <td>27293.416748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"3\" valign=\"top\">3+</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>19878.102667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.078313</td>\n",
       "      <td>27859.625657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.076923</td>\n",
       "      <td>24659.789885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"8\" valign=\"top\">Wedding</td>\n",
       "      <td rowspan=\"3\" valign=\"top\">0</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.075758</td>\n",
       "      <td>25520.499280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.075824</td>\n",
       "      <td>25709.146426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.056604</td>\n",
       "      <td>27022.179972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"3\" valign=\"top\">1-2</td>\n",
       "      <td>Alone</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>29386.256100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Together</td>\n",
       "      <td>0.089286</td>\n",
       "      <td>27049.569764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.076923</td>\n",
       "      <td>26250.803000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td rowspan=\"2\" valign=\"top\">3+</td>\n",
       "      <td>Together</td>\n",
       "      <td>0.104167</td>\n",
       "      <td>29606.991604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Was together</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>60949.254000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  debt_ratio  total_income\n",
       "purpose   children family_status                          \n",
       "Car       0        Alone            0.123791  26481.929710\n",
       "                   Together         0.076205  25989.772921\n",
       "                   Was together     0.080808  24233.223378\n",
       "          1-2      Alone            0.156522  27471.051578\n",
       "                   Together         0.108454  27816.610535\n",
       "                   Was together     0.089109  25507.851728\n",
       "          3+       Alone            0.000000  24883.941750\n",
       "                   Together         0.090909  29171.334697\n",
       "                   Was together     0.000000  35229.068500\n",
       "Education 0        Alone            0.111842  26702.273725\n",
       "                   Together         0.082837  26210.188046\n",
       "                   Was together     0.074850  23515.225153\n",
       "          1-2      Alone            0.094017  23940.697158\n",
       "                   Together         0.110698  26384.310761\n",
       "                   Was together     0.070000  25068.159245\n",
       "          3+       Alone            0.000000  18033.161667\n",
       "                   Together         0.056338  29494.768092\n",
       "                   Was together     0.000000  26429.342667\n",
       "Housing   0        Alone            0.073770  26947.833857\n",
       "                   Together         0.067001  26541.906401\n",
       "                   Was together     0.056671  24973.837045\n",
       "          1-2      Alone            0.111888  27275.892500\n",
       "                   Together         0.078697  27320.918656\n",
       "                   Was together     0.075862  27293.416748\n",
       "          3+       Alone            0.666667  19878.102667\n",
       "                   Together         0.078313  27859.625657\n",
       "                   Was together     0.076923  24659.789885\n",
       "Wedding   0        Alone            0.075758  25520.499280\n",
       "                   Together         0.075824  25709.146426\n",
       "                   Was together     0.056604  27022.179972\n",
       "          1-2      Alone            0.050000  29386.256100\n",
       "                   Together         0.089286  27049.569764\n",
       "                   Was together     0.076923  26250.803000\n",
       "          3+       Together         0.104167  29606.991604\n",
       "                   Was together     0.000000  60949.254000"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def family_cat(family):\n",
    "        if 'unmarried' in family:\n",
    "            fam = 'Alone'\n",
    "        elif 'civil partnership' in family or 'married' in family:\n",
    "            fam = 'Together'\n",
    "        else:\n",
    "            fam = 'Was together'\n",
    "        return fam\n",
    "\n",
    "credit_score['family_status'] = credit_score['family_status'].apply(family_cat)\n",
    "\n",
    "childs =  credit_score['children']\n",
    "def children_cat(x):\n",
    "    if x >= 3:\n",
    "        children = '3+'\n",
    "    elif x == 0:\n",
    "        children  = '0'    \n",
    "    elif x == 1 or 2:\n",
    "        children = '1-2'\n",
    "    return children\n",
    "childrens = childs.apply(children_cat)\n",
    "credit_score['children'] = childrens\n",
    "\n",
    "credit_debt = credit_score.groupby(['family_status','purpose','children'])['debt'].mean()\n",
    "\n",
    "credit_s = pd.merge(credit_score,credit_debt ,on= ['family_status','purpose','children'])\n",
    "credit_s = credit_s.rename(columns={'debt_x': 'debt','debt_y': 'debt_ratio'})\n",
    "\n",
    "credit_s = credit_s.rename(columns={'debt_x': 'debt','debt_y': 'debt_ratio'})\n",
    "\n",
    "credit_s= credit_s.pivot_table(index = ['purpose','children','family_status'], values=['debt_ratio','total_income'])\n",
    "\n",
    "credit_c = credit_s.pivot_table(index = ['children'], values=['debt_ratio','total_income'])\n",
    "\n",
    "credit_f= credit_s.pivot_table(index = ['family_status'], values=['debt_ratio','total_income'])\n",
    "\n",
    "credit_p= credit_s.pivot_table(index = ['purpose'], values=['debt_ratio','total_income'])\n",
    "\n",
    "display(credit_c)\n",
    "display(credit_f)\n",
    "display(credit_p)\n",
    "display(credit_s)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "The project description is measuring the link between family status , number of children and the chance of defaulting on loan.\n",
    "I categorized the children column to (0 ,1-2,3+) as well as the family column (alone, together, not together) for easier analysis. Then I used groupby method to categorise 'family_status', 'purpose' and 'children' with the sum of the 'debt' column for each combination of family and children.\n",
    "For easier analysis, using that groupby result, I created a debt_ratio to assess each family/childs proportion of the total debt. Those with a higher ratio contributed the most towards the total default on loans.\n",
    "\n",
    "To put it into the original the debt_ratio variable into the orignal Dataframe, I used pd.merge() to merge them together on the basis of the orignal groupby index of 'family_status', 'purpose', 'children'. Then I renamed the new debt column values to provide a clearer description of the values.\n",
    "\n",
    "Finally, I used this merged Dataframe to turn it into a pivot table, categorising the data in terms of the index 'purpose' , 'children' and then 'family status'. Accompained with the values 'debt_ratio' and 'total_income'. I did not include the 'debt' column as pivot takes the median of the Multi index value, which would violate the 'debt' column having binary values.\n",
    "\n",
    "I then used display() to check the final results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Step 3 Answer these questions\n",
    "\n",
    "\n",
    "## Is there a relation between having kids and repaying a loan on time?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the debt_ratio values, the default on loans decreases in each family and purpose category for every additional child. This could be from the idea that people become more financially responsible when they have children, hence repaying more loans on time or it could be the small sample size that skews the insights found from the data.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Is there a relation between marital status and repaying a loan on time?\n",
    " \n",
    " Those who are in a civil partnership or are married tend to have a higher debt_ratio value than those that are divorced, widowed or unmarried, which implies that civil partnerships and married persons are less likely than unmarried, divorced or widowed persons to repay loans on time. This could be because those who are married / in civil partnerships have to take more financial risks such as getting into the housing market, which they are not able to afford. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Is there a relation between income level and repaying a loan on time?\n",
    "\n",
    "Although the highest income's have a 0 debt_ratio values,meaning they repay loans on time, there is a weak correlation between paying a loan on time and income level. Most of the defaults on loans are from the 32-20k income level.\n",
    "\n",
    "## How do different loan purposes affect on-time repayment of the loan?\n",
    "\n",
    "For purchases like a wedding, those customers had the best on-time loan repayment. Whereas housing and education had the worst customers for on-time loan repayment. However, it is hard to conclude that the loan purposes affect on-time loan repayment as it could incorrectly imply that those that take out a loan for housing are more likely to have defaulted on a loan which could lead to a more inacccurate credit score, than using martial status and number of children.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "## Final Conclusion\n",
    "\n",
    "\n",
    "To conclude, marital status and number of children do have an impact on whether a customer will default on a loan. As the debt_ratio values show, customers that have less kids take more financial risks that increase their likelihood of defaulting. Additionally, those who are married/in civil partnerships are burdened with intial large expenses like housing costs and education repayments on average incomes. However, this is a dataset with a small sample size of 2125, where the dataset is skewed toward the purpose of the loan being housing. So, it is hard to say with confidence that martial status and number of children has a insignificant or significant impact on whether a customer will default on a loan.\n",
    "\n",
    "For a bank to accurately create a credit score for customers it is suggested to get information on the loan that customers defaulted on. For example, if the purpose of that defaulted loan was in the housing category,then the bank can make a more accurate conclusion (along with marital status and number of children) to whether they are likely to default on a another loan for housing. Additionally, getting more information on the loan amount would help provide a more accurate score, as the column containing income is important for peoples ability to pay. Those who may not have defaulted before, could default if the loan is outside their ability to pay."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.8"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
